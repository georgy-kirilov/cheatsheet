# ENV=Development

# BACKEND_PORT=5000
# FRONTEND_PORT=3000

# DB_PORT=5435
# DB_USER=admin
# DB_PASSWORD=String1@
# DB_NAME=application
# DB_VOLUME_PATH=C:/ProgramData/docker-volumes/application/db

# BROKER_PORT=5673
# BROKER_UI_PORT=15673
# BROKER_USER=admin
# BROKER_PASSWORD=String1@
# BROKER_VOLUME_PATH=C:/ProgramData/docker-volumes/application/rabbitmq

version: '3.8'

services:

  frontend:
    container_name: application-frontend
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "${FRONTEND_PORT}:3000"

  backend:
    container_name: application-backend
    image: application-backend
    build:
      context: ./backend/Api
      dockerfile: Dockerfile
    ports:
      - "${BACKEND_PORT}:80"
    environment:
      - ASPNETCORE_ENVIRONMENT=${ENV}
      - Database=Host=database;Username=${DB_USER};Password=${DB_PASSWORD};Database=${DB_NAME};
    depends_on:
      - database
      - broker

  database:
    container_name: application-database
    image: postgres:16
    ports:
      - "${DB_PORT}:5432"
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
    volumes:
      - ${DB_VOLUME_PATH}:/var/lib/postgresql/data

  broker:
    container_name: application-broker
    image: rabbitmq:3.12.7
    ports:
      - "${BROKER_PORT}:5672"
      - "${BROKER_UI_PORT}:15672"
    environment:
      - RABBITMQ_DEFAULT_USER=${BROKER_USER}
      - RABBITMQ_DEFAULT_PASS=${BROKER_PASSWORD}
    volumes:
      - ${BROKER_VOLUME_PATH}:/var/lib/rabbitmq
