version: '3.8'

services:
  api:
    container_name: __application__-api
    image: __application__-api
    build:
      context: ./backend
      dockerfile: Api/Dockerfile
    restart: unless-stopped
    ports:
      - "5000:80"
    environment:
      - DATABASE=Host=db;Username=${DB_USER};Password=${DB_PASSWORD};Database=${DB_NAME};
      - JWT_KEY=${JWT_KEY}
      - JWT_ISSUER=${JWT_ISSUER}
      - JWT_AUDIENCE=${JWT_AUDIENCE}
      - JWT_LIFETIME_SECONDS=${JWT_LIFETIME_SECONDS}
    depends_on:
      - db
      - rabbitmq

  db:
    container_name: __application__-db
    image: postgres:16
    restart: unless-stopped
    ports:
      - "5433:5432"
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
    volumes:
      - ${VOLUMES_PATH}/db:/var/lib/postgresql/data

  rabbitmq:
    container_name: __application__-rabbitmq
    image: rabbitmq:3.12.7
    ports:
      - "5673:5672"
      - "15673:15672"
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_PASSWORD}
    volumes:
      - ${VOLUMES_PATH}/rabbitmq:/var/lib/rabbitmq
